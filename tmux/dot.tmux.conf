# 環境変数TMUX_VERSIONにバージョンを代入
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | sed 's|tmux \\([0-9\\.]*\\).*|\\1|g')"

### GENERAL ###
## Prefix
unbind-key C-b
set-option -g prefix C-t # -gをつけることで全セッションに対してグローバルな設定になる
bind-key C-t send-prefix # C-t*2でtmux内のプログラムにC-tを送る

## shell
set-option -g default-shell /bin/zsh

## emacs24で C-Left|Right|Up|Downを効くようにする設定
## (emacsの07-tmux.elの有効かが必要)
set-window-option -g xterm-keys on

## キーストロークのディレイを減らす
set -sg escape-time 1

## ウィンドウのインデックスを1から始める
set -g base-index 1

## ペインのインデックスを1から始める
setw -g pane-base-index 1

## 設定ファイルの再ロード
bind r source-file ~/.tmux.conf

#256色端末
set-option -g default-terminal "screen-256color"

### PANE ###
## Prefix+oを連続移動を可能にする
bind -r o select-pane -t :.+

## Prefix+pを連続移動を可能にする
bind -r p previous-window

## Prefix+nを連続移動を可能にする
bind -r n next-window

## arrow-keyでpaneサイズを変更 (select-paneのキーを上書き)
bind-key -r Left  resize-pane -L 1
bind -r Down  resize-pane -D 1
bind -r Up    resize-pane -U 1
bind -r Right resize-pane -R 1

## ペイン分割のキー変更
unbind-key '"'
unbind-key '%'
#bind '-' split-window -v #(LOGGINGにまとめた)
#bind '|' split-window -h #(LOGGINGにまとめた)

## wordの区切り
# 追加するときは-a。下記例では'を区切り文字に追加する
# set-window-option -ag word-separators "'"
set-window-option -g word-separators ' _-./;@'

### STATUS BAR ###
# 行の書式 
#    #(コマンド行)     コマンド出力の最初の行 
#    #[属性]           色/属性の変更(例:#[fg=cyan,bright]) 
#    #H                ホスト名 
#    #I                ウィンドウ番号 
#    #P                ペイン番号 
#    #S                セッション名 
#    #T                ウィンドウタイトル 
#    #W                ウィンドウ名 
#    ##                「#」の文字 
# 
# コマンドは繰り返し実行される (更新頻度はstatus-intervalによる) 
# 指定可能な色は 
# black red green yellow blue magenta cyan white 
# の他、256色パレット上のcolour0,colour1, ... colour255が利用可能 
# 指定可能な属性は 
#   bright(bold)[明るい(太字)], dim[暗い], underscore[下線], blink[点滅], 
#   reverse[反転], hidden[非表示], italics[イタリック], default[書式のクリア] 
#   (端末によっては効果がないものもある) 
# 
# 既定の属性 
#   「xxx-fg」「xxx-bg」は色、「xxx-attr」は属性 
#   透明にしたい場合、端末によっては 
#   status-bgを「default」にすると256色パレット色の表示が部分的におかしくなる? 
#   背景色は端末エミュレータの背景色に近いものを設定すると良いかも 

## ステータスバーのUTF-8サポートを有効にする
## VERSION 1.x 系のみ
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.0" | bc)" = 1 ]'  \
   'set -g status-utf8 on'

## リフレッシュの間隔を設定する(デフォルト15秒)
set -g status-interval 1

## 左パネルを設定する
set -g status-left "#[fg=colour255]#h:#S "

## ウィンドウリストを設定する
setw -g window-status-format "#I)#W"
setw -g window-status-current-format "#I)#W"

## アクティブなウィンドウを目立たせる
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]'  \
  "setw -g window-status-current-fg yellow \
   setw -g window-status-current-bg green \
   setw -g window-status-current-attr bright,underscore"

if-shell -b '[ "$(echo "2.9 <= $TMUX_VERSION" | bc)" = 1 ]'  \
  "set -g window-status-current-style fg=yellow,bg=green,bright,underscore"

## 右パネルを設定する
set -g status-right "#[fg=colour255]%Y.%m.%d(%a) %H:%M"

### LOGGING ###
# 保存先は ~/.tmux/log 事前に作っておくこと。
# ログファイルを見るときは `cat <log-file>` or `less -R <log-file>` だとエスケープシーケンスが解釈できるので良い
# 起動時にログを有効にするのは .zshrc で実現
#
#----
# Prefix+! でペイン分割を終了したとき、pipe-pane に指定した #I, #P が更新されないので
# 複数ペインが同じログファイルを出力対象にする場合がある。
# 下記をやると break した pane のログが書出されなくなる
# bind-key ! break-pane \; pipe-pane -o ...
#----

# window を作った時にログを有効にする
bind-key c new-window -c "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "\"${HOME}/.tmux/util/logger/mark.sh\" \"#S\" \"#I\" \"#P\"; while read -r L; do \"${HOME}/.tmux/util/logger/write.sh\" \"\${L}\" \"#S\" \"#I\" \"#P\"; done "'

# pane を作った時にログを有効にする
bind-key '-' split-window -vc "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "\"${HOME}/.tmux/util/logger/mark.sh\" \"#S\" \"#I\" \"#P\"; while read -r L; do \"${HOME}/.tmux/util/logger/write.sh\" \"\${L}\" \"#S\" \"#I\" \"#P\"; done "'
bind-key '|' split-window -hc "#{pane_current_path}" \; pipe-pane -o '/bin/sh -c "\"${HOME}/.tmux/util/logger/mark.sh\" \"#S\" \"#I\" \"#P\"; while read -r L; do \"${HOME}/.tmux/util/logger/write.sh\" \"\${L}\" \"#S\" \"#I\" \"#P\"; done "'
 